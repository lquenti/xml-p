//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.12.06 at 06:58:40 PM UTC 
//


package Trees;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the Trees package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _OpAdd_QNAME = new QName("", "Add");
    private final static QName _OpSub_QNAME = new QName("", "Sub");
    private final static QName _OpMul_QNAME = new QName("", "Mul");
    private final static QName _OpDiv_QNAME = new QName("", "Div");
    private final static QName _OpNum_QNAME = new QName("", "Num");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: Trees
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Tree }
     * 
     */
    public Tree createTree() {
        return new Tree();
    }

    /**
     * Create an instance of {@link Op }
     * 
     */
    public Op createOp() {
        return new Op();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "Add", scope = Op.class)
    public JAXBElement<Op> createOpAdd(Op value) {
        return new JAXBElement<Op>(_OpAdd_QNAME, Op.class, Op.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "Sub", scope = Op.class)
    public JAXBElement<Op> createOpSub(Op value) {
        return new JAXBElement<Op>(_OpSub_QNAME, Op.class, Op.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "Mul", scope = Op.class)
    public JAXBElement<Op> createOpMul(Op value) {
        return new JAXBElement<Op>(_OpMul_QNAME, Op.class, Op.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Op }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "Div", scope = Op.class)
    public JAXBElement<Op> createOpDiv(Op value) {
        return new JAXBElement<Op>(_OpDiv_QNAME, Op.class, Op.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Long }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Long }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "Num", scope = Op.class)
    public JAXBElement<Long> createOpNum(Long value) {
        return new JAXBElement<Long>(_OpNum_QNAME, Long.class, Op.class, value);
    }

}

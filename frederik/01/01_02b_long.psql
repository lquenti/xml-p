-- Improved version with UNION. Query only takes 0.05s
-- I used a local version of the mondial database with PostgreSQL 17

CREATE OR REPLACE FUNCTION distance(lat1 double precision, long1 double precision, lat2 double precision, long2 double precision) RETURNS double precision
	RETURN (6370 * COS(COS(@lat1 / 180 * 3.14) * COS(@lat2 / 180 * 3.14) * COS((@long1 - @long2) / 180 * 3.14) + SIN(@lat1 / 180 * 3.14) * SIN(@lat2 / 180 * 3.14)));

WITH CapitalCoordinates AS (
    SELECT
        c.Code AS CountryCode,
        ct.Latitude AS CapitalLat,
        ct.Longitude AS CapitalLon
    FROM Country c
    JOIN City ct ON c.Capital = ct.Name AND c.Code = ct.Country
),
Distances AS (
    SELECT
        cc.CountryCode,
        MAX(distance(cc.CapitalLat, cc.CapitalLon, ci.Latitude, ci.Longitude)) AS MaxDistance
    FROM CapitalCoordinates cc
    JOIN City ci ON ci.Country = cc.CountryCode
    GROUP BY cc.CountryCode
    UNION
    SELECT
        cc.CountryCode,
        MAX(distance(cc.CapitalLat, cc.CapitalLon, (mtn.Coordinates).Latitude, (mtn.Coordinates).Longitude)) AS MaxDistance
    FROM CapitalCoordinates cc
    JOIN geo_Mountain gm ON gm.Country = cc.CountryCode
    JOIN Mountain mtn ON gm.Mountain = mtn.Name
    GROUP BY cc.CountryCode
    UNION
    SELECT
        cc.CountryCode,
        MAX(distance(cc.CapitalLat, cc.CapitalLon, (lk.Coordinates).Latitude, (lk.Coordinates).Longitude)) AS MaxDistance
    FROM CapitalCoordinates cc
    JOIN geo_Lake gl ON gl.Country = cc.CountryCode
    JOIN Lake lk ON gl.Lake = lk.Name
    GROUP BY cc.CountryCode
    UNION
    SELECT
        cc.CountryCode,
        MAX(distance(cc.CapitalLat, cc.CapitalLon, (isl.Coordinates).Latitude, (isl.Coordinates).Longitude)) AS MaxDistance
    FROM CapitalCoordinates cc
    JOIN geo_Island gi ON gi.Country = cc.CountryCode
    JOIN Island isl ON gi.Island = isl.Name
    GROUP BY cc.CountryCode
    UNION
    SELECT
        cc.CountryCode,
        MAX(distance(cc.CapitalLat, cc.CapitalLon, (rs.Source).Latitude, (rs.Source).Longitude)) AS MaxDistance
    FROM CapitalCoordinates cc
    JOIN geo_Source gs ON gs.Country = cc.CountryCode
    JOIN River rs ON gs.River = rs.Name
    GROUP BY cc.CountryCode
    UNION
    SELECT
        cc.CountryCode,
        MAX(distance(cc.CapitalLat, cc.CapitalLon, (re.Estuary).Latitude, (re.Estuary).Longitude)) AS MaxDistance
    FROM CapitalCoordinates cc
    JOIN geo_Estuary ge ON ge.Country = cc.CountryCode
    JOIN River re ON ge.River = re.Name
    GROUP BY cc.CountryCode
)
SELECT
    co.Name AS Country,
    MAX(d.MaxDistance) AS Radius
FROM Distances d
JOIN Country co ON co.Code = d.CountryCode
GROUP BY co.Name
ORDER BY Radius DESC;